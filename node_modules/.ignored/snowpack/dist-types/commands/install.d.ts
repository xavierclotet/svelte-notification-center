import { SnowpackConfig, SnowpackSourceFile } from '../config.js';
import { DependencyStatsOutput } from '../rollup-plugins/rollup-plugin-stats.js';
import { InstallTarget } from '../scan-imports.js';
import { CommandOptions, ImportMap } from '../util.js';
interface InstallOptions {
    lockfile: ImportMap | null;
    logError: (msg: string) => void;
    logUpdate: (msg: string) => void;
}
declare type InstallResult = {
    success: false;
    importMap: null;
} | {
    success: true;
    importMap: ImportMap;
};
export declare function install(installTargets: InstallTarget[], { lockfile, logError, logUpdate }: InstallOptions, config: SnowpackConfig): Promise<InstallResult>;
export declare function getInstallTargets(config: SnowpackConfig, scannedFiles?: SnowpackSourceFile[]): Promise<InstallTarget[]>;
export declare function command(commandOptions: CommandOptions): Promise<void>;
interface InstalllRunOptions extends CommandOptions {
    installTargets: InstallTarget[];
}
interface InstallRunResult {
    success: boolean;
    hasError: boolean;
    importMap: ImportMap | null;
    newLockfile: ImportMap | null;
    stats: DependencyStatsOutput | null;
}
export declare function run({ config, lockfile, installTargets, }: InstalllRunOptions): Promise<InstallRunResult>;
export {};
